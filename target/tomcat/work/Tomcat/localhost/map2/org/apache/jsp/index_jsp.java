/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-11 23:46:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("    <html>\r\n");
      out.write("\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <title>Mapa</title>\r\n");
      out.write("        <style>\r\n");
      out.write("            /* Estilos para el contenedor del mapa */\r\n");
      out.write("            #map {\r\n");
      out.write("                height: 800px;\r\n");
      out.write("                /* Altura del mapa */\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                /* Ancho del mapa */\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("        <h1>Mapa</h1>\r\n");
      out.write("\r\n");
      out.write("        <!-- Div para contener el mapa -->\r\n");
      out.write("        <div id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("            // Función para inicializar el mapa\r\n");
      out.write("            // Función para inicializar el mapa\r\n");
      out.write("            function initMap() {\r\n");
      out.write("                // Coordenadas del punto inicial\r\n");
      out.write("                var puntoInicial = { lat: 5.6652957, lng: -72.9289882 };\r\n");
      out.write("\r\n");
      out.write("                // Coordenadas del punto final\r\n");
      out.write("                var puntoFinal = { lat: 5.7223889, lng: -72.9137606 };\r\n");
      out.write("\r\n");
      out.write("                // Crea un nuevo mapa en el elemento con id \"map\"\r\n");
      out.write("                var map = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("                    center: puntoInicial, // Centra el mapa en el punto inicial\r\n");
      out.write("                    zoom: 14 // Nivel de zoom inicial\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // Crea un marcador en el mapa para el punto inicial\r\n");
      out.write("                var markerInicio = new google.maps.Marker({\r\n");
      out.write("                    position: puntoInicial, // Posición del marcador\r\n");
      out.write("                    map: map, // Mapa al que se añade el marcador\r\n");
      out.write("                    title: 'Ubicación inicial' // Título del marcador\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // Crea un marcador en el mapa para el punto final\r\n");
      out.write("                var markerFinal = new google.maps.Marker({\r\n");
      out.write("                    position: puntoFinal, // Posición del marcador\r\n");
      out.write("                    map: map, // Mapa al que se añade el marcador\r\n");
      out.write("                    title: 'Ubicación final' // Título del marcador\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // Definir las aristas que conectan los nodos\r\n");
      out.write("                var aristas = [\r\n");
      out.write("                    { inicio: puntoInicial, fin: { lat: 5.7142417, lng: -72.9368016 } },\r\n");
      out.write("                    { inicio: { lat: 5.7142417, lng: -72.9368016 }, fin: puntoFinal }\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Dibujar las aristas en el mapa\r\n");
      out.write("                var map = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("                    center: puntoInicial, // Centra el mapa en el punto inicial\r\n");
      out.write("                    zoom: 14 // Nivel de zoom inicial\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //Crea una solicitud de dirección entre el punto inicial y el punto final\r\n");
      out.write("                var directionsService = new google.maps.DirectionsService();\r\n");
      out.write("                var directionsDisplay = new google.maps.DirectionsRenderer();\r\n");
      out.write("                directionsDisplay.setMap(map);\r\n");
      out.write("\r\n");
      out.write("                var request = {\r\n");
      out.write("                    origin: puntoInicial, // Punto de inicio\r\n");
      out.write("                    destination: puntoFinal, // Punto de fin\r\n");
      out.write("                    //travelMode: 'DRIVING' // Modo de viaje (DRIVING, WALKING, BICYCLING o TRANSIT)\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                // Obtiene la ruta y la muestra en el mapa\r\n");
      out.write("                directionsService.route(request, function (result, status) {\r\n");
      out.write("                    if (status == 'OK') {\r\n");
      out.write("                        directionsDisplay.setDirections(result);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("        <!-- Incluye la API de Google Maps con tu clave de API -->\r\n");
      out.write("        <script\r\n");
      out.write("            src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBDaeWicvigtP9xPv919E-RNoxfvC-Hqik&callback=initMap\"\r\n");
      out.write("            async defer></script>\r\n");
      out.write("    </body>\r\n");
      out.write("\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
